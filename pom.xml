<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.salesforce</groupId>
	<artifactId>pljava-perf</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>pl/java performance</name>
	<description>A project to benchmark pl/java performance</description>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<postgresql.driver.version>9.1-901-1.jdbc4</postgresql.driver.version>
		<db.login>postgres</db.login>
		<db.password>postgres</db.password>
		<db.server>localhost</db.server>
		<db.port>5432</db.port>
		<testing.db.login>testme</testing.db.login>
		<testing.db.password>password</testing.db.password>
		<testing.database>benchmark</testing.database>
		<testing.schema>perftesting</testing.schema>
	</properties>

	<dependencies>
		<dependency>
			<groupId>postgres</groupId>
			<artifactId>pljava-api</artifactId>
			<version>1.4.3</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/pljava-api.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.driver.version}</version>
		</dependency>
	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>hellblazer-snapshots</id>
			<url>https://repository-hal900000.forge.cloudbees.com/snapshot/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>2.0.5</version>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.driver.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>create-database</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>update</goal>
						</goals>
						<configuration>
							<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://${db.server}:${db.port}/postgres</url>
							<username>${db.login}</username>
							<password>${db.password}</password>
							<changeLogFile>${project.build.testOutputDirectory}/create/create-database.xml</changeLogFile>
							<verbose>false</verbose>
						</configuration>
					</execution>
					<execution>
						<id>load-sql</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>update</goal>
						</goals>
						<configuration>
							<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://${db.server}:${db.port}/${testing.database}</url>
							<username>${testing.db.login}</username>
							<password>${testing.db.password}</password>
							<changeLogFile>${project.build.outputDirectory}/benchmark.xml</changeLogFile>
							<verbose>false</verbose>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.hellblazer</groupId>
				<artifactId>pljava-loader</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.driver.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<jdbcUrl>jdbc:postgresql://${db.server}:${db.port}/${testing.database}</jdbcUrl>
					<username>${testing.db.login}</username>
					<password>${testing.db.password}</password>
					<classpathProperty>pljavaClassPath</classpathProperty>
				</configuration>
				<executions>
					<execution>
						<phase>process-test-classes</phase>
						<goals>
							<goal>load</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.driver.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>set-classpath</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://${db.server}:${db.port}/${testing.database}</url>
							<username>${testing.db.login}</username>
							<password>${testing.db.password}</password>
							<autocommit>true</autocommit>
							<sqlCommand>SELECT sqlj.set_classpath('${testing.schema}',
								'${pljavaClassPath}');</sqlCommand>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											sql-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.hellblazer
										</groupId>
										<artifactId>
											pljava-loader
										</artifactId>
										<versionRange>
											[0.0.1-SNAPSHOT,)
										</versionRange>
										<goals>
											<goal>load</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<activation>
				<property>
					<name>drop</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<dependencies>
							<dependency>
								<groupId>postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>${postgresql.driver.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>drop</id>
								<phase>test-compile</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<driver>org.postgresql.Driver</driver>
									<url>jdbc:postgresql://${db.server}:${db.port}/postgres</url>
									<username>${db.login}</username>
									<password>${db.password}</password>
									<autocommit>true</autocommit>
									<onError>continue</onError>
									<srcFiles>
										<srcFile>${project.build.testOutputDirectory}/drop/drop-database.sql</srcFile>
										<srcFile>${project.build.testOutputDirectory}/drop/drop-roles.sql</srcFile>
										<srcFile>${project.build.testOutputDirectory}/drop/drop-liquibase.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>